/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__<T>(cmd: string, args?: Record<string, unknown>): Promise<T>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

/**
 * Adds an instance to the installation queue
 */
export function installInstance(instance: NexusInstance) {
    return invoke()<null>("install_instance", { instance })
}

/**
 * Returns a list of versions from Mojang's version manifest
 */
export function getVersions() {
    return invoke()<VersionManifestRoot>("get_versions")
}

export type Modloader = "Vanilla" | "Fabric" | "Forge" | "Quilt"
export type NexusInstance = { id: string; install_stage: InstanceInstallStage; name: string; game_version: string; modloader: Modloader; loader_version: string | null; path: string }
export type InstanceInstallStage = "Installed" | "Installing" | "Cancelled" | "None"
export type Latest = { release: string; snapshot: string }
export type VersionManifestRoot = { latest: Latest; versions: Version[] }
export type Version = { id: string; type: string; url: string; time: string; releaseTime: string; sha1: string; complianceLevel: number }
