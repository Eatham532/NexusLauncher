/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__<T>(cmd: string, args?: Record<string, unknown>): Promise<T>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

/**
 * Gets the path of the directory which contains the app configurations
 */
export function getAppdataDirPath() {
    return invoke()<string>("get_appdata_dir_path")
}

/**
 * Gets the data from config.toml
 */
export function getAppConfig() {
    return invoke()<AppConfig>("get_app_config")
}

/**
 * Write the app config to config.toml
 */
export function writeAppConfig(config: AppConfig) {
    return invoke()<null>("write_app_config", { config })
}

export type AppConfig = { metadata_dir: string; cache_dir: string; default_instances_dir: string }
