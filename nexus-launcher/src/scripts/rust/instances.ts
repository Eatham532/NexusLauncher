/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__<T>(cmd: string, args?: Record<string, unknown>): Promise<T>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

/**
 * Get the data from instances.toml
 */
export function getInstancesToml() {
    return invoke()<InstancesToml>("get_instances_toml")
}

/**
 * Write instances data to instances.toml
 */
export function writeInstanceToml(config: InstancesToml) {
    return invoke()<null>("write_instance_toml", { config })
}

/**
 * Adds an instance to the installation queue
 */
export function installInstance(instance: NexusInstance) {
    return invoke()<null>("install_instance", { instance })
}

/**
 * Returns a list of versions
 */
export function getVersions() {
    return invoke()<PistonMetadata>("get_versions")
}

/**
 * Launch an instance
 */
export function launchInstance(instance: NexusInstance) {
    return invoke()<null>("launch_instance", { instance })
}

/**
 * Delete an instance
 */
export function deleteInstance(instance: NexusInstance) {
    return invoke()<null>("delete_instance", { instance })
}

export type Type = "old_alpha" | "old_beta" | "release" | "snapshot"
export type PistonMetadata = { versions: MVersion[]; modloaders: string[] }
export type Modloader = "Vanilla" | "Fabric" | "Quilt" | "Forge" | "NeoForge"
export type LoaderVersion = { id: string; json_url: string; json_sha1: string | null; stable: boolean }
export type InstanceInstallStage = "Installed" | "Installing" | "Cancelled" | "None"
export type InstancesToml = { Instance: NexusInstance[] }
export type MVersion = { id: string; game_type: Type; json_url: string; json_sha1: string; modloaders: { [key: string]: { [key: string]: LoaderVersion } } }
export type NexusInstance = { id: string; install_stage: InstanceInstallStage; name: string; game_version: string; modloader: Modloader; loader_version: string | null; path: string }
